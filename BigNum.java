import java.math.BigDecimal;

public class Solution {

    static char[] add(BigNum num1 , BigNum num2)
    {
        int result_length = num1.number.length;
        if (result_length < num2.number.length) result_length = num2.number.length;
        result_length++;
        char[] result = new char[result_length];
        int i = 0;
        while (i < result_length)
        {
            int temp = (result[i] == '\0'? 0 : result[i] - '0') + num1.popLast() + num2.popLast();
            result[i] = (char)(temp % 10 + '0');
            i++;
            if (i >= result_length) break;
            result[i] = (char)(temp / 10 + '0');        // remember if sum over 10
        }
        if (result[result_length - 1] == '0') result[result_length - 1] = '\0'; // clear last item if == '\0'
        return result; // result must be reverse
    }

    static class BigNum
    {
        char[] number;
        int cursor;

        public BigNum(char[] number) {
            this.number = new char[number.length];
            strcpy(number, this.number);
            this.cursor = number.length - 1;
        }

        void strcpy(char[] src, char[] dst)
        {
            for (int i = 0; i < src.length; i++) {
                dst[i] = src[i];
            }
        }

        int popLast()
        {
            while (cursor >=0 && number[cursor] == '\0') cursor--;
            if (cursor < 0) return 0;
            return number[cursor--] - '0';
        }
    }

    public static void main(String[] args) {
        String num1 = "23678763458734685663435342523523423417021456968786923478623489569845098234734278734567892439586872367876345873468566343534252352342341702145696878692347862348956984509823473427873456789243958687236787634587346856634353425235234234170214569687869234786234895698450982347342787345678924395868723678763458734685663435342523523423417021456968786923478623489569845098234734278734567892439586872367876345873468566343534252352342341702145696878692347862348956984509823473427873456789243958687236787634587346856634353425235234234170214569687869234786234895698450982347342787345678924395868723678763458734685663435342523523423417021456968786923478623489569845098234734278734567892439586872367876345873468566343534252352342341702145696878692347862348956984509823473427873456789243958687236787634587346856634353425235234234170214569687869234786234895698450982347342787345678924395868723678763458734685663435342523523423417021456968786923478623489569845098234734278734567892439586872367876345873468566343534252352342341702145696878692347862348956984509823473427873456789243958687236787634587346856634353425235234234170214569687869234786234895698450982347342787345678924395868723678763458734685663435342523523423417021456968786923478623489569845098234734278734567892439586872367876345873468566343534252352342341702145696878692347862348956984509823473427873456789243958687236787634587346856634353425235234234170214569687869234786234895698450982347342787345678924395868723678763458734685663435342523523423417021456968786923478623489569845098234734278734567892439586872367876345873468566343534252352342341702145696878692347862348956984509823473427873456789243958687236787634587346856634353425235234234170214569687869234786234895698450982347342787345678924395868723678763458734685663435342523523423417021456968786923478623489569845098234734278734567892439586872367876345873468566343534252352342341702145696878692347862348956984509823473427873456789243958687";
        String num2 = "23656473454575678898732834523478963904570345828768973469873498729348527891876";
        BigDecimal decimal1 = new BigDecimal(num1);
        BigDecimal decimal2 = new BigDecimal(num2);
        BigDecimal result1 = decimal1.add(decimal2);
        String a = result1.toString();

        BigNum bigNum1 = new BigNum(num1.toCharArray());
        BigNum bigNum2 = new BigNum(num2.toCharArray());
        char[] result = add(bigNum1, bigNum2);
        String b = new StringBuilder(String.valueOf(result)).reverse().toString() ;
        System.out.println(a);
        System.out.println(b);

    }

}
